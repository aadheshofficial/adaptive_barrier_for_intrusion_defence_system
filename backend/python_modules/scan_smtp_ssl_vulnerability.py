import nmap

def scan_vulnerable_smtp_submission(ip: str, port: int) -> dict:
    """
    Scans a given IP and port for SMTP Submission (port 587 with STARTTLS/SSL) vulnerabilities using Nmap's NSE scripts.

    Args:
        ip (str): The target IP address to scan.
        port (int): The specific port to check for SMTP Submission vulnerabilities.

    Returns:
        dict: A dictionary containing detected SMTP Submission vulnerabilities.
    """
    nm = nmap.PortScanner()
    nm.scan(hosts=ip, ports=str(port), arguments="--script smtp*,ssl* ")
    results = {}

    if ip in nm.all_hosts():
        for proto in nm[ip].all_protocols():
            if port in nm[ip][proto]:
                script_results = nm[ip][proto][port].get("script", {})
                if script_results:
                    results[port] = script_results

    return results

def help():
    """
    Provides usage instructions for the scan_vulnerable_smtp_submission function.

    Example:
        smtp_submission_vulns = scan_vulnerable_smtp_submission("192.168.1.1", 587)
        print(smtp_submission_vulns)

    This scans a specific port on the given IP for SMTP Submission (STARTTLS/SSL) vulnerabilities.

    Returns:
        dict: A dictionary containing detected SMTP Submission vulnerabilities.
    """
    help_text = (
        "\nUsage:\n"
        "    Call the function scan_vulnerable_smtp_submission(ip, port) with a valid IP address and port number.\n"
        "    Example:\n"
        "        smtp_submission_vulns = scan_vulnerable_smtp_submission(\"192.168.1.1\", 587)\n"
        "        print(smtp_submission_vulns)\n"
        "\nArguments:\n"
        "    ip (str): A valid IPv4 address.\n"
        "    port (int): The port number to scan (default SMTP Submission port: 587).\n"
        "\nReturns:\n"
        "    dict: A dictionary with detected SMTP Submission vulnerabilities.\n"
    )
    return help_text
