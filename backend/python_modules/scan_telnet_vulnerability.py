import nmap

def scan_vulnerable_telnet(ip: str, port: int) -> dict:
    """
    Scans a given IP and port for extensive Telnet vulnerabilities using Nmap's NSE scripts.

    Args:
        ip (str): The target IP address to scan.
        port (int): The specific Telnet port to check.

    Returns:
        dict: A dictionary containing detected Telnet vulnerabilities.
    """
    nm = nmap.PortScanner()

    nm.scan(
        hosts=ip, 
        ports=str(port), 
        arguments="--script telnet-vuln*,telnet-brute,telnet-ntlm-info,telnet-encryption,telnet-auth-bypass,telnet-unsafe"
    )

    results = {}

    if ip in nm.all_hosts():
        for proto in nm[ip].all_protocols():
            if port in nm[ip][proto]:
                script_results = nm[ip][proto][port].get("script", {})
                if script_results:
                    results[port] = script_results
    
    return results 

def help():
    """
    Provides usage instructions for the scan_vulnerable_telnet function.

    Example:
        telnet_vulns = scan_vulnerable_telnet("192.168.1.1", 23)
        print(telnet_vulns)

    This scans a given IP and port for Telnet vulnerabilities using Nmap.

    Returns:
        dict: A dictionary containing detected Telnet vulnerabilities.
    """
    help_text = (
        "\nUsage:\n"
        "    Call the function scan_vulnerable_telnet(ip, port) with a valid IP address and port number.\n"
        "    Example:\n"
        "        telnet_vulns = scan_vulnerable_telnet(\"192.168.1.1\", 23)\n"
        "        print(telnet_vulns)\n"
        "    This scans the given IP's Telnet service on the specified port for known vulnerabilities using Nmap NSE scripts.\n"
        "\nFeatures Scanned:\n"
        "    - Checks for weak authentication methods (telnet-auth-bypass).\n"
        "    - Identifies brute-force vulnerabilities (telnet-brute).\n"
        "    - Scans for outdated and insecure encryption methods (telnet-encryption).\n"
        "    - Detects NTLM-related information leaks (telnet-ntlm-info).\n"
        "    - Searches for general Telnet misconfigurations and known exploits (telnet-vuln*).\n"
        "    - Identifies unsafe Telnet implementations (telnet-unsafe).\n"
        "\nArguments:\n"
        "    ip (str): A valid IPv4 address (e.g., \"192.168.1.1\").\n"
        "    port (int): The Telnet port to scan (default: 23, but may run on other ports).\n"
        "\nReturns:\n"
        "    dict: A dictionary with detected Telnet vulnerabilities.\n"
        "\nNotes:\n"
        "    - Requires Nmap and Telnet-related NSE scripts to be installed.\n"
        "    - Ensure you have permission before scanning external IPs.\n"
        "    - Supports scanning of non-standard Telnet ports (e.g., 2323, 8023).\n"
    )
    return help_text
