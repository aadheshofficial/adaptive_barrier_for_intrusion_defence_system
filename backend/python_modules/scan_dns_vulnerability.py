import nmap

def scan_vulnerable_dns(ip: str, port: int = 53) -> dict:
    """
    Scans a given IP and port for DNS vulnerabilities using Nmap's NSE scripts.

    Args:
        ip (str): The target IP address to scan.
        port (int): The specific port to check for DNS vulnerabilities (default: 53).

    Returns:
        dict: A dictionary containing detected DNS vulnerabilities.
    """
    nm = nmap.PortScanner()
    
    nm.scan(
        hosts=ip, 
        ports=str(port), 
        arguments="--script dns-zone-transfer,dns-recursion,dns-cache-snoop,dns-nsec-enum,dns-random-srcport,dns-random-txid,dns-brute,dns-service-discovery,dns-update,dns-nsid"
    )
    
    results = {}

    if ip in nm.all_hosts():
        for proto in nm[ip].all_protocols():
            if port in nm[ip][proto]:
                script_results = nm[ip][proto][port].get("script", {})
                if script_results:
                    results[port] = script_results  
    
    return results

def help():
    """
    Provides usage instructions for the scan_vulnerable_dns function.
    """
    help_text = (
        "\nUsage:\n"
        "    Call the function scan_vulnerable_dns(ip, port) with a valid IP address and port number.\n"
        "    Example:\n"
        "        dns_vulns = scan_vulnerable_dns(\"192.168.1.1\", 53)\n"
        "        print(dns_vulns)\n"
        "\nFeatures Scanned:\n"
        "    - Zone transfer vulnerabilities (AXFR - dns-zone-transfer).\n"
        "    - Open recursion (DNS amplification attacks - dns-recursion).\n"
        "    - Cache snooping to check if domains were previously resolved (dns-cache-snoop).\n"
        "    - DNSSEC weaknesses and record enumeration (dns-nsec-enum).\n"
        "    - Weak transaction ID and source port randomization (dns-random-srcport, dns-random-txid).\n"
        "    - Brute-force subdomain enumeration (dns-brute).\n"
        "    - Service discovery through DNS (dns-service-discovery).\n"
        "    - Detection of unauthorized dynamic updates (dns-update).\n"
        "    - Identification of wildcard DNS configurations (dns-nsid).\n"
        "\nArguments:\n"
        "    ip (str): A valid IPv4 address (e.g., \"192.168.1.1\").\n"
        "    port (int): The DNS port to scan (default: 53, but may run on other ports).\n"
        "\nReturns:\n"
        "    dict: A dictionary with detected DNS vulnerabilities.\n"
        "\nNotes:\n"
        "    - Requires Nmap and DNS-related NSE scripts to be installed.\n"
        "    - Ensure you have permission before scanning external IPs.\n"
        "    - Supports scanning of non-standard DNS ports (e.g., 5353 for mDNS).\n"
    )
    return help_text
